// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using hospitalGQL.Data;

namespace hospitalGQL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("hospitalGQL.Models.Doctor", b =>
                {
                    b.Property<long>("cpr_doctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("doctor_age")
                        .HasColumnType("bigint");

                    b.Property<string>("doctor_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("house_number")
                        .HasColumnType("bigint");

                    b.Property<long>("phone")
                        .HasColumnType("integer");

                    b.Property<long>("postal_code")
                        .HasColumnType("bigint");

                    b.Property<string>("speciality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("cpr_doctor");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("hospitalGQL.Models.Patient", b =>
                {
                    b.Property<long>("cpr_patient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("DoctorId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoomID")
                        .HasColumnType("bigint");

                    b.Property<string>("blood_type")
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<long>("cpr_doctor")
                        .HasColumnType("bigint");

                    b.Property<string>("gender")
                        .HasColumnType("text");

                    b.Property<long>("house_number")
                        .HasColumnType("bigint");

                    b.Property<DateTime >("last_update")
                        .HasColumnType("date");

                    b.Property<string>("patient_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("patient_status")
                        .HasColumnType("text");

                    b.Property<long>("phone")
                        .HasColumnType("bigint");

                    b.Property<long>("postal_code")
                        .HasColumnType("bigint");

                    b.Property<string>("street")
                        .HasColumnType("text");

                    b.HasKey("cpr_patient");

                    b.HasIndex("DoctorId");

                    b.HasIndex("RoomID");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("hospitalGQL.Models.Prescription", b =>
                {
                    b.Property<long>("prescription_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("PatientID")
                        .HasColumnType("bigint");

                    b.Property<long>("cpr_doctor")
                        .HasColumnType("bigint");

                    b.Property<long>("cpr_patient")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("expiration_date")
                        .HasColumnType("date");

                    b.Property<string>("name_prescription")
                        .HasColumnType("text");

                    b.Property<long>("quantity")
                        .HasColumnType("integer");

                    b.HasKey("prescription_id");

                    b.HasIndex("PatientID");

                    b.ToTable("Prescriptions");
                });

            modelBuilder.Entity("hospitalGQL.Models.Room", b =>
                {
                    b.Property<long>("room_number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("cpr_doctor")
                        .HasColumnType("bigint");

                    b.Property<long>("cpr_patient")
                        .HasColumnType("bigint");

                    b.Property<string>("room_type")
                        .HasColumnType("text");

                    b.Property<string>("status")
                        .HasColumnType("text");

                    b.HasKey("room_number");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("hospitalGQL.Models.Patient", b =>
                {
                    b.HasOne("hospitalGQL.Models.Doctor", "Doctor")
                        .WithMany("Patients")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hospitalGQL.Models.Room", "Room")
                        .WithMany("Patients")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("hospitalGQL.Models.Prescription", b =>
                {
                    b.HasOne("hospitalGQL.Models.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("hospitalGQL.Models.Doctor", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("hospitalGQL.Models.Patient", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("hospitalGQL.Models.Room", b =>
                {
                    b.Navigation("Patients");
                });
#pragma warning restore 612, 618
        }
    }
}
